//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.4 /home/juanse/Proyectos/webidl-dotnet/WebIDL.g 2012-03-10 17:38:12

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;


using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

namespace  WebIDL.Grammar 
{
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.4")]
[System.CLSCompliant(false)]
public partial class WebIDLParser : Antlr.Runtime.Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "WS"
	};
	public const int EOF=-1;
	public const int WS=4;

	public WebIDLParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public WebIDLParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		ITreeAdaptor treeAdaptor = default(ITreeAdaptor);
		CreateTreeAdaptor(ref treeAdaptor);
		TreeAdaptor = treeAdaptor ?? new CommonTreeAdaptor();
		OnCreated();
	}
	// Implement this function in your helper file to use a custom tree adaptor
	partial void CreateTreeAdaptor(ref ITreeAdaptor adaptor);

	private ITreeAdaptor adaptor;

	public ITreeAdaptor TreeAdaptor
	{
		get
		{
			return adaptor;
		}

		set
		{
			this.adaptor = value;
		}
	}

	public override string[] TokenNames { get { return WebIDLParser.tokenNames; } }
	public override string GrammarFileName { get { return "/home/juanse/Proyectos/webidl-dotnet/WebIDL.g"; } }


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	partial void EnterRule_definition();
	partial void LeaveRule_definition();

	// $ANTLR start "definition"
	// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:13:8: public definition : EOF ;
	[GrammarRule("definition")]
	public AstParserRuleReturnScope<object, IToken> definition()
	{
		EnterRule_definition();
		EnterRule("definition", 1);
		TraceIn("definition", 1);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);

		object root_0 = default(object);

		IToken EOF1 = default(IToken);

		object EOF1_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "definition");
		DebugLocation(13, 22);
		try
		{
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:13:18: ( EOF )
			DebugEnterAlt(1);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:13:20: EOF
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(13, 20);
			EOF1=(IToken)Match(input,EOF,Follow._EOF_in_definition49); 
			EOF1_tree = (object)adaptor.Create(EOF1);
			adaptor.AddChild(root_0, EOF1_tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("definition", 1);
			LeaveRule("definition", 1);
			LeaveRule_definition();
		}
		DebugLocation(13, 22);
		} finally { DebugExitRule(GrammarFileName, "definition"); }
		return retval;

	}
	// $ANTLR end "definition"
	#endregion Rules


	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _EOF_in_definition49 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}

} // namespace  WebIDL.Grammar 
