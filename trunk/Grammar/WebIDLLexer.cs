//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.4 /home/juanse/Proyectos/webidl-dotnet/WebIDL.g 2012-03-12 23:25:09

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;

namespace  WebIDL.Grammar 
{
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.4")]
[System.CLSCompliant(false)]
public partial class WebIDLLexer : Antlr.Runtime.Lexer
{
	public const int EOF=-1;
	public const int CLOSE_BLOCK=4;
	public const int COMMENT=5;
	public const int ID=6;
	public const int KW_MODULE=7;
	public const int KW_VALUETYPE=8;
	public const int OPEN_BLOCK=9;
	public const int SEMICOLON=10;
	public const int WS=11;

    // delegates
    // delegators

	public WebIDLLexer()
	{
		OnCreated();
	}

	public WebIDLLexer(ICharStream input )
		: this(input, new RecognizerSharedState())
	{
	}

	public WebIDLLexer(ICharStream input, RecognizerSharedState state)
		: base(input, state)
	{

		OnCreated();
	}
	public override string GrammarFileName { get { return "/home/juanse/Proyectos/webidl-dotnet/WebIDL.g"; } }


	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	partial void EnterRule_KW_MODULE();
	partial void LeaveRule_KW_MODULE();

	// $ANTLR start "KW_MODULE"
	[GrammarRule("KW_MODULE")]
	private void mKW_MODULE()
	{
		EnterRule_KW_MODULE();
		EnterRule("KW_MODULE", 1);
		TraceIn("KW_MODULE", 1);
		try
		{
			int _type = KW_MODULE;
			int _channel = DefaultTokenChannel;
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:47:2: ( 'module' )
			DebugEnterAlt(1);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:47:4: 'module'
			{
			DebugLocation(47, 4);
			Match("module"); 


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("KW_MODULE", 1);
			LeaveRule("KW_MODULE", 1);
			LeaveRule_KW_MODULE();
		}
	}
	// $ANTLR end "KW_MODULE"

	partial void EnterRule_KW_VALUETYPE();
	partial void LeaveRule_KW_VALUETYPE();

	// $ANTLR start "KW_VALUETYPE"
	[GrammarRule("KW_VALUETYPE")]
	private void mKW_VALUETYPE()
	{
		EnterRule_KW_VALUETYPE();
		EnterRule("KW_VALUETYPE", 2);
		TraceIn("KW_VALUETYPE", 2);
		try
		{
			int _type = KW_VALUETYPE;
			int _channel = DefaultTokenChannel;
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:50:2: ( 'valuetype' )
			DebugEnterAlt(1);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:50:4: 'valuetype'
			{
			DebugLocation(50, 4);
			Match("valuetype"); 


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("KW_VALUETYPE", 2);
			LeaveRule("KW_VALUETYPE", 2);
			LeaveRule_KW_VALUETYPE();
		}
	}
	// $ANTLR end "KW_VALUETYPE"

	partial void EnterRule_OPEN_BLOCK();
	partial void LeaveRule_OPEN_BLOCK();

	// $ANTLR start "OPEN_BLOCK"
	[GrammarRule("OPEN_BLOCK")]
	private void mOPEN_BLOCK()
	{
		EnterRule_OPEN_BLOCK();
		EnterRule("OPEN_BLOCK", 3);
		TraceIn("OPEN_BLOCK", 3);
		try
		{
			int _type = OPEN_BLOCK;
			int _channel = DefaultTokenChannel;
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:54:2: ( '{' )
			DebugEnterAlt(1);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:54:4: '{'
			{
			DebugLocation(54, 4);
			Match('{'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("OPEN_BLOCK", 3);
			LeaveRule("OPEN_BLOCK", 3);
			LeaveRule_OPEN_BLOCK();
		}
	}
	// $ANTLR end "OPEN_BLOCK"

	partial void EnterRule_CLOSE_BLOCK();
	partial void LeaveRule_CLOSE_BLOCK();

	// $ANTLR start "CLOSE_BLOCK"
	[GrammarRule("CLOSE_BLOCK")]
	private void mCLOSE_BLOCK()
	{
		EnterRule_CLOSE_BLOCK();
		EnterRule("CLOSE_BLOCK", 4);
		TraceIn("CLOSE_BLOCK", 4);
		try
		{
			int _type = CLOSE_BLOCK;
			int _channel = DefaultTokenChannel;
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:56:2: ( '};' )
			DebugEnterAlt(1);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:56:4: '};'
			{
			DebugLocation(56, 4);
			Match("};"); 


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("CLOSE_BLOCK", 4);
			LeaveRule("CLOSE_BLOCK", 4);
			LeaveRule_CLOSE_BLOCK();
		}
	}
	// $ANTLR end "CLOSE_BLOCK"

	partial void EnterRule_SEMICOLON();
	partial void LeaveRule_SEMICOLON();

	// $ANTLR start "SEMICOLON"
	[GrammarRule("SEMICOLON")]
	private void mSEMICOLON()
	{
		EnterRule_SEMICOLON();
		EnterRule("SEMICOLON", 5);
		TraceIn("SEMICOLON", 5);
		try
		{
			int _type = SEMICOLON;
			int _channel = DefaultTokenChannel;
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:59:2: ( ';' )
			DebugEnterAlt(1);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:59:4: ';'
			{
			DebugLocation(59, 4);
			Match(';'); 

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("SEMICOLON", 5);
			LeaveRule("SEMICOLON", 5);
			LeaveRule_SEMICOLON();
		}
	}
	// $ANTLR end "SEMICOLON"

	partial void EnterRule_ID();
	partial void LeaveRule_ID();

	// $ANTLR start "ID"
	[GrammarRule("ID")]
	private void mID()
	{
		EnterRule_ID();
		EnterRule("ID", 6);
		TraceIn("ID", 6);
		try
		{
			int _type = ID;
			int _channel = DefaultTokenChannel;
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:61:4: ( ( 'a' .. 'z' | 'A' .. 'Z' | '_' ) ( 'a' .. 'z' | 'A' .. 'Z' | '0' .. '9' | '_' )* )
			DebugEnterAlt(1);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:61:6: ( 'a' .. 'z' | 'A' .. 'Z' | '_' ) ( 'a' .. 'z' | 'A' .. 'Z' | '0' .. '9' | '_' )*
			{
			DebugLocation(61, 6);
			if ((input.LA(1)>='A' && input.LA(1)<='Z')||input.LA(1)=='_'||(input.LA(1)>='a' && input.LA(1)<='z'))
			{
				input.Consume();
			}
			else
			{
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}

			DebugLocation(61, 30);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:61:30: ( 'a' .. 'z' | 'A' .. 'Z' | '0' .. '9' | '_' )*
			try { DebugEnterSubRule(1);
			while (true)
			{
				int alt1=2;
				try { DebugEnterDecision(1, false);
				int LA1_0 = input.LA(1);

				if (((LA1_0>='0' && LA1_0<='9')||(LA1_0>='A' && LA1_0<='Z')||LA1_0=='_'||(LA1_0>='a' && LA1_0<='z')))
				{
					alt1 = 1;
				}


				} finally { DebugExitDecision(1); }
				switch ( alt1 )
				{
				case 1:
					DebugEnterAlt(1);
					// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:
					{
					DebugLocation(61, 30);
					input.Consume();


					}
					break;

				default:
					goto loop1;
				}
			}

			loop1:
				;

			} finally { DebugExitSubRule(1); }


			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("ID", 6);
			LeaveRule("ID", 6);
			LeaveRule_ID();
		}
	}
	// $ANTLR end "ID"

	partial void EnterRule_COMMENT();
	partial void LeaveRule_COMMENT();

	// $ANTLR start "COMMENT"
	[GrammarRule("COMMENT")]
	private void mCOMMENT()
	{
		EnterRule_COMMENT();
		EnterRule("COMMENT", 7);
		TraceIn("COMMENT", 7);
		try
		{
			int _type = COMMENT;
			int _channel = DefaultTokenChannel;
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:64:5: ( '//' (~ ( '\\n' | '\\r' ) )* ( '\\r' )? '\\n' | '/*' ( options {greedy=false; } : . )* '*/' )
			int alt5=2;
			try { DebugEnterDecision(5, false);
			int LA5_0 = input.LA(1);

			if ((LA5_0=='/'))
			{
				int LA5_1 = input.LA(2);

				if ((LA5_1=='/'))
				{
					alt5 = 1;
				}
				else if ((LA5_1=='*'))
				{
					alt5 = 2;
				}
				else
				{
					NoViableAltException nvae = new NoViableAltException("", 5, 1, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				NoViableAltException nvae = new NoViableAltException("", 5, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(5); }
			switch (alt5)
			{
			case 1:
				DebugEnterAlt(1);
				// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:64:9: '//' (~ ( '\\n' | '\\r' ) )* ( '\\r' )? '\\n'
				{
				DebugLocation(64, 9);
				Match("//"); 

				DebugLocation(64, 14);
				// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:64:14: (~ ( '\\n' | '\\r' ) )*
				try { DebugEnterSubRule(2);
				while (true)
				{
					int alt2=2;
					try { DebugEnterDecision(2, false);
					int LA2_0 = input.LA(1);

					if (((LA2_0>='\u0000' && LA2_0<='\t')||(LA2_0>='\u000B' && LA2_0<='\f')||(LA2_0>='\u000E' && LA2_0<='\uFFFF')))
					{
						alt2 = 1;
					}


					} finally { DebugExitDecision(2); }
					switch ( alt2 )
					{
					case 1:
						DebugEnterAlt(1);
						// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:
						{
						DebugLocation(64, 14);
						input.Consume();


						}
						break;

					default:
						goto loop2;
					}
				}

				loop2:
					;

				} finally { DebugExitSubRule(2); }

				DebugLocation(64, 28);
				// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:64:28: ( '\\r' )?
				int alt3=2;
				try { DebugEnterSubRule(3);
				try { DebugEnterDecision(3, false);
				int LA3_0 = input.LA(1);

				if ((LA3_0=='\r'))
				{
					alt3 = 1;
				}
				} finally { DebugExitDecision(3); }
				switch (alt3)
				{
				case 1:
					DebugEnterAlt(1);
					// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:64:28: '\\r'
					{
					DebugLocation(64, 28);
					Match('\r'); 

					}
					break;

				}
				} finally { DebugExitSubRule(3); }

				DebugLocation(64, 34);
				Match('\n'); 
				DebugLocation(64, 39);
				_channel=HIDDEN;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:65:9: '/*' ( options {greedy=false; } : . )* '*/'
				{
				DebugLocation(65, 9);
				Match("/*"); 

				DebugLocation(65, 14);
				// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:65:14: ( options {greedy=false; } : . )*
				try { DebugEnterSubRule(4);
				while (true)
				{
					int alt4=2;
					try { DebugEnterDecision(4, false);
					int LA4_0 = input.LA(1);

					if ((LA4_0=='*'))
					{
						int LA4_1 = input.LA(2);

						if ((LA4_1=='/'))
						{
							alt4 = 2;
						}
						else if (((LA4_1>='\u0000' && LA4_1<='.')||(LA4_1>='0' && LA4_1<='\uFFFF')))
						{
							alt4 = 1;
						}


					}
					else if (((LA4_0>='\u0000' && LA4_0<=')')||(LA4_0>='+' && LA4_0<='\uFFFF')))
					{
						alt4 = 1;
					}


					} finally { DebugExitDecision(4); }
					switch ( alt4 )
					{
					case 1:
						DebugEnterAlt(1);
						// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:65:42: .
						{
						DebugLocation(65, 42);
						MatchAny(); 

						}
						break;

					default:
						goto loop4;
					}
				}

				loop4:
					;

				} finally { DebugExitSubRule(4); }

				DebugLocation(65, 47);
				Match("*/"); 

				DebugLocation(65, 52);
				_channel=HIDDEN;

				}
				break;

			}
			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("COMMENT", 7);
			LeaveRule("COMMENT", 7);
			LeaveRule_COMMENT();
		}
	}
	// $ANTLR end "COMMENT"

	partial void EnterRule_WS();
	partial void LeaveRule_WS();

	// $ANTLR start "WS"
	[GrammarRule("WS")]
	private void mWS()
	{
		EnterRule_WS();
		EnterRule("WS", 8);
		TraceIn("WS", 8);
		try
		{
			int _type = WS;
			int _channel = DefaultTokenChannel;
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:68:5: ( ( ' ' | '\\t' | '\\r' | '\\n' ) )
			DebugEnterAlt(1);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:68:9: ( ' ' | '\\t' | '\\r' | '\\n' )
			{
			DebugLocation(68, 9);
			if ((input.LA(1)>='\t' && input.LA(1)<='\n')||input.LA(1)=='\r'||input.LA(1)==' ')
			{
				input.Consume();
			}
			else
			{
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				Recover(mse);
				throw mse;
			}

			DebugLocation(72, 11);
			_channel=HIDDEN;

			}

			state.type = _type;
			state.channel = _channel;
		}
		finally
		{
			TraceOut("WS", 8);
			LeaveRule("WS", 8);
			LeaveRule_WS();
		}
	}
	// $ANTLR end "WS"

	public override void mTokens()
	{
		// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:1:8: ( KW_MODULE | KW_VALUETYPE | OPEN_BLOCK | CLOSE_BLOCK | SEMICOLON | ID | COMMENT | WS )
		int alt6=8;
		try { DebugEnterDecision(6, false);
		switch (input.LA(1))
		{
		case 'm':
			{
			int LA6_1 = input.LA(2);

			if ((LA6_1=='o'))
			{
				int LA6_9 = input.LA(3);

				if ((LA6_9=='d'))
				{
					int LA6_11 = input.LA(4);

					if ((LA6_11=='u'))
					{
						int LA6_13 = input.LA(5);

						if ((LA6_13=='l'))
						{
							int LA6_15 = input.LA(6);

							if ((LA6_15=='e'))
							{
								int LA6_17 = input.LA(7);

								if (((LA6_17>='0' && LA6_17<='9')||(LA6_17>='A' && LA6_17<='Z')||LA6_17=='_'||(LA6_17>='a' && LA6_17<='z')))
								{
									alt6 = 6;
								}
								else
								{
									alt6 = 1;
								}
							}
							else
							{
								alt6 = 6;
							}
						}
						else
						{
							alt6 = 6;
						}
					}
					else
					{
						alt6 = 6;
					}
				}
				else
				{
					alt6 = 6;
				}
			}
			else
			{
				alt6 = 6;
			}
			}
			break;
		case 'v':
			{
			int LA6_2 = input.LA(2);

			if ((LA6_2=='a'))
			{
				int LA6_10 = input.LA(3);

				if ((LA6_10=='l'))
				{
					int LA6_12 = input.LA(4);

					if ((LA6_12=='u'))
					{
						int LA6_14 = input.LA(5);

						if ((LA6_14=='e'))
						{
							int LA6_16 = input.LA(6);

							if ((LA6_16=='t'))
							{
								int LA6_18 = input.LA(7);

								if ((LA6_18=='y'))
								{
									int LA6_20 = input.LA(8);

									if ((LA6_20=='p'))
									{
										int LA6_21 = input.LA(9);

										if ((LA6_21=='e'))
										{
											int LA6_22 = input.LA(10);

											if (((LA6_22>='0' && LA6_22<='9')||(LA6_22>='A' && LA6_22<='Z')||LA6_22=='_'||(LA6_22>='a' && LA6_22<='z')))
											{
												alt6 = 6;
											}
											else
											{
												alt6 = 2;
											}
										}
										else
										{
											alt6 = 6;
										}
									}
									else
									{
										alt6 = 6;
									}
								}
								else
								{
									alt6 = 6;
								}
							}
							else
							{
								alt6 = 6;
							}
						}
						else
						{
							alt6 = 6;
						}
					}
					else
					{
						alt6 = 6;
					}
				}
				else
				{
					alt6 = 6;
				}
			}
			else
			{
				alt6 = 6;
			}
			}
			break;
		case '{':
			{
			alt6 = 3;
			}
			break;
		case '}':
			{
			alt6 = 4;
			}
			break;
		case ';':
			{
			alt6 = 5;
			}
			break;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'w':
		case 'x':
		case 'y':
		case 'z':
			{
			alt6 = 6;
			}
			break;
		case '/':
			{
			alt6 = 7;
			}
			break;
		case '\t':
		case '\n':
		case '\r':
		case ' ':
			{
			alt6 = 8;
			}
			break;
		default:
			{
				NoViableAltException nvae = new NoViableAltException("", 6, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
		}

		} finally { DebugExitDecision(6); }
		switch (alt6)
		{
		case 1:
			DebugEnterAlt(1);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:1:10: KW_MODULE
			{
			DebugLocation(1, 10);
			mKW_MODULE(); 

			}
			break;
		case 2:
			DebugEnterAlt(2);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:1:20: KW_VALUETYPE
			{
			DebugLocation(1, 20);
			mKW_VALUETYPE(); 

			}
			break;
		case 3:
			DebugEnterAlt(3);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:1:33: OPEN_BLOCK
			{
			DebugLocation(1, 33);
			mOPEN_BLOCK(); 

			}
			break;
		case 4:
			DebugEnterAlt(4);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:1:44: CLOSE_BLOCK
			{
			DebugLocation(1, 44);
			mCLOSE_BLOCK(); 

			}
			break;
		case 5:
			DebugEnterAlt(5);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:1:56: SEMICOLON
			{
			DebugLocation(1, 56);
			mSEMICOLON(); 

			}
			break;
		case 6:
			DebugEnterAlt(6);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:1:66: ID
			{
			DebugLocation(1, 66);
			mID(); 

			}
			break;
		case 7:
			DebugEnterAlt(7);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:1:69: COMMENT
			{
			DebugLocation(1, 69);
			mCOMMENT(); 

			}
			break;
		case 8:
			DebugEnterAlt(8);
			// /home/juanse/Proyectos/webidl-dotnet/WebIDL.g:1:77: WS
			{
			DebugLocation(1, 77);
			mWS(); 

			}
			break;

		}

	}


	#region DFA

	protected override void InitDFAs()
	{
		base.InitDFAs();
	}

 
	#endregion

}

} // namespace  WebIDL.Grammar 
